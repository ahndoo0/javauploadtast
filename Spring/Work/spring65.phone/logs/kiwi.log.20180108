main> [2018-01-08 12:10:40] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:10:40 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:10:40] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:10:40] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:10:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:10:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:10:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@40f33492] 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:10:41] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:10:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:10:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@5226e402] 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:10:41] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:10:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#41a90fa8' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:10:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@43cf6ea3] 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:10:41] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:10:41] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:10:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:10:41] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:10:41] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:10:41] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:10:41] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:10:40 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [567391009, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [567391009, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [567391009, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [567391009, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [567391009, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [567391009, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:10:41] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:10:40 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1069350529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1069350529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1069350529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1069350529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1069350529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1069350529, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1910034407, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1910034407, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1910034407, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1910034407, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1910034407, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1910034407, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [836170750, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [836170750, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [836170750, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [836170750, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [836170750, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:10:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [836170750, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:10:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:10:41] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'phoneController': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: com.spring65.phone.inf.IServicePhone com.spring65.phone.Controller.PhoneController.usersvr; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.spring65.phone.inf.IServicePhone] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)} 
main> [2018-01-08 12:19:46] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:19:46 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:19:46] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:19:47] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:19:47] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:19:47] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:19:47] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@40f33492] 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:19:47] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:19:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:19:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:19:47] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:19:47] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@5226e402] 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:19:47] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:19:47] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#41a90fa8' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:19:47] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@43cf6ea3] 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:19:47] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:19:47] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:19:47] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:19:47] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:19:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:19:47] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:19:47] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:19:47] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:47] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:19:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:19:48] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:19:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:19:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:19:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:19:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:19:48] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:19:48] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:19:46 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1249547869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:19:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1249547869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1249547869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1249547869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1249547869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1249547869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:19:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:19:48] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:19:46 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:19:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:19:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:19:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:19:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1279852178, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:19:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1279852178, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1279852178, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1279852178, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1279852178, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:19:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1279852178, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:19:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:19:48] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'phoneController': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: com.spring65.phone.inf.IServicePhone com.spring65.phone.Controller.PhoneController.usersvr; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.spring65.phone.inf.IServicePhone] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)} 
main> [2018-01-08 12:29:31] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:29:31 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:29:31] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:29:31] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:29:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:29:32] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:29:32] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@40f33492] 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:29:32] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:29:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1862900975, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:29:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:29:32] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:29:32] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@5226e402] 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:29:32] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:29:32] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#41a90fa8' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:29:32] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@43cf6ea3] 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:29:32] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:29:32] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:29:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:29:32] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:29:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1884387196, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:29:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:29:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1602530280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:29:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:29:32] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:29:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1156841091, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:29:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:29:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:29:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:29:32] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:29:32] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:29:31 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1249547869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:29:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1249547869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1249547869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1249547869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1249547869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1249547869, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:29:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:29:32] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:29:31 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:29:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [373973695, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:29:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:29:33] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:29:33] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:29:33] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:29:33] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:29:33] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:29:33] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:33] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:33] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1510009630, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:29:33] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:29:33] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:29:33] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1279852178, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:29:33] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1279852178, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:29:33] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1279852178, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:29:33] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:29:33] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1279852178, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:33] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1279852178, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:29:33] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1279852178, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:29:33] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:29:33] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'phoneController': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: com.spring65.phone.inf.IServicePhone com.spring65.phone.Controller.PhoneController.usersvr; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.spring65.phone.inf.IServicePhone] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)} 
main> [2018-01-08 12:32:33] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:32:33 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:32:33] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:32:34] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:32:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:32:36] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:32:36] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@40f33492] 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:32:36] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:32:36] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:32:36] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:32:36] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:32:36] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:32:36] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:32:36] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:36] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:36] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [973692608, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:32:36] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:32:36] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:32:36] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@5f84abe8] 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:32:36] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:32:36] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:32:37] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#41a90fa8' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:32:37] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@78411116] 
main> [2018-01-08 12:32:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:32:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:32:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:32:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:32:37] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:32:37] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:32:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:32:37] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:32:37] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:32:37] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:32:37] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [381930033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:32:37] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [381930033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [381930033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [381930033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:37] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [381930033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [381930033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:32:37] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1956598686, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:32:37] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1956598686, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1956598686, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1956598686, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:37] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1956598686, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1956598686, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:32:37] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:32:37] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:32:37] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:37] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:32:37] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:32:37] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:37] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:37] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:32:37] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:32:37] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:32:38] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:32:33 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:32:38] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:32:38] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2063275841, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:32:38] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2063275841, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:32:38] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2063275841, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:32:38] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:32:38] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2063275841, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:38] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2063275841, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:38] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2063275841, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:32:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:32:39] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:32:33 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:32:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [407877261, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:32:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1479800269, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:32:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1479800269, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1479800269, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1479800269, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1479800269, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1479800269, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:32:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [389519344, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:32:39] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [389519344, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [389519344, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [389519344, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:39] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [389519344, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:32:39] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [389519344, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:32:39] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:32:39] [ClassPathXmlApplicationContext] [488] [WARN] Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'phoneController': Injection of autowired dependencies failed; nested exception is org.springframework.beans.factory.BeanCreationException: Could not autowire field: com.spring65.phone.inf.IServicePhone com.spring65.phone.Controller.PhoneController.usersvr; nested exception is org.springframework.beans.factory.NoSuchBeanDefinitionException: No qualifying bean of type [com.spring65.phone.inf.IServicePhone] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency. Dependency annotations: {@org.springframework.beans.factory.annotation.Autowired(required=true)} 
main> [2018-01-08 12:34:25] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:34:25 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:34:25] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:34:26] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:34:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:34:28] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:34:28] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@7646731d] 
main> [2018-01-08 12:34:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:34:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:34:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:34:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:34:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:34:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:34:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:34:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:34:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:34:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:34:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:34:28] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:34:28] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:34:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:34:28] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:34:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:34:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:34:28] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1859928417, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:34:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1859928417, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1859928417, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1859928417, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1859928417, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1859928417, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:34:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:34:29] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:34:29] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@21ab988f] 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:34:29] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:34:29] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#26fb628' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:34:29] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@13a37e2a] 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:34:29] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:34:29] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:34:29] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:34:29] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1338770454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:34:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1338770454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1338770454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1338770454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1338770454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1338770454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:34:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [5021240, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:34:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [5021240, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [5021240, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [5021240, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [5021240, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [5021240, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:34:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:34:29] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:34:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:34:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1146484093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:34:29] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1146484093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1146484093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1146484093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:29] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1146484093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:29] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1146484093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:34:29] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:34:29] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:34:31] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:34:25 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [847174133, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:34:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [847174133, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [847174133, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [847174133, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [847174133, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [847174133, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:34:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:34:31] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:34:25 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:34:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:34:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2050291306, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:34:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2050291306, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2050291306, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2050291306, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2050291306, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2050291306, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:34:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:34:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:34:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [407263135, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:34:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [407263135, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [407263135, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [407263135, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [407263135, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [407263135, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:34:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [664969353, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:34:31] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [664969353, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [664969353, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [664969353, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [664969353, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [664969353, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:34:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:34:31] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 12:34:31] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 12:34:31] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 12:34:31] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 12:34:31] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 12:34:31] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:34:31] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:34:32] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 12:34:32] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:34:32] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:34:32] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:34:32] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 12:34:32] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 12:34:32] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 12:34:32] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 12:34:32] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:34:32] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@4760f169] 
main> [2018-01-08 12:34:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 12:34:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 12:34:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 12:34:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 12:34:32] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:34:32] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:34:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:34:32] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:34:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:34:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:34:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:34:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [650410100, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:34:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [650410100, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:34:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [650410100, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:34:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:34:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [650410100, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [650410100, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [650410100, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:34:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:34:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:34:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [143999341, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:34:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [143999341, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:34:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [143999341, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:34:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:34:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [143999341, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [143999341, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:34:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [143999341, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:34:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:35:03] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:35:03 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:35:03] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:35:04] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:35:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:35:05] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:35:05] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@7646731d] 
main> [2018-01-08 12:35:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:35:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:35:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:35:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:35:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:35:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:35:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:35:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:35:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:35:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:35:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:35:05] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:35:05] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:35:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:35:05] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:35:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:35:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:35:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1859928417, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:35:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1859928417, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1859928417, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1859928417, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1859928417, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1859928417, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:35:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:35:06] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:35:06] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@21ab988f] 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:35:06] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:35:06] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#26fb628' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:35:06] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@13a37e2a] 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:35:06] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:35:06] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:35:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:35:06] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1338770454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:35:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1338770454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1338770454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1338770454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1338770454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1338770454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:35:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [5021240, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:35:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [5021240, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [5021240, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [5021240, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [5021240, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [5021240, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:35:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:35:06] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:35:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1800959603, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:35:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1146484093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:35:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1146484093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1146484093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1146484093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1146484093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1146484093, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:35:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:35:07] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:35:08] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:35:03 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [847174133, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:35:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [847174133, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [847174133, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [847174133, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [847174133, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [847174133, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:35:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:35:08] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:35:03 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:35:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:35:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2050291306, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:35:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2050291306, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2050291306, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2050291306, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2050291306, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2050291306, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:35:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:35:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:35:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [407263135, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:35:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [407263135, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [407263135, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [407263135, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [407263135, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [407263135, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:35:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [664969353, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:35:08] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [664969353, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [664969353, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [664969353, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:08] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [664969353, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:08] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [664969353, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:35:08] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:35:09] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 12:35:09] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 12:35:09] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 12:35:09] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 12:35:09] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 12:35:09] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:35:09] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:35:09] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 12:35:09] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:35:09] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:35:09] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:35:09] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 12:35:09] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 12:35:09] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 12:35:09] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 12:35:09] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:35:09] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@35c12c7a] 
main> [2018-01-08 12:35:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 12:35:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 12:35:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 12:35:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 12:35:09] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:35:09] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:35:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:35:09] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:35:09] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:35:09] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:35:09] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:35:09] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:35:09] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:35:09] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:35:09] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:35:09] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:09] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:09] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:35:09] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:35:09] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:35:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:35:10] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:35:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:35:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:35:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:10] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:35:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:35:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:35:58] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:35:58 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:35:59] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:35:59] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:35:59] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:35:59] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:35:59] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@702ed190] 
main> [2018-01-08 12:35:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:35:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:35:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:35:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:35:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:35:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:35:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:35:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:35:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:35:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:35:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:35:59] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:35:59] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:35:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:35:59] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:35:59] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:35:59] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:35:59] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:36:00] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:36:00] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@512d4583] 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:36:00] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:36:00] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#184497d1' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:36:00] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@64f555e7] 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:36:00] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:36:00] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:36:00] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:36:00] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:36:00] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:36:00] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:35:58 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1858493278, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1858493278, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1858493278, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1858493278, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1858493278, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1858493278, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:36:00] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:35:58 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [10304615, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [10304615, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [10304615, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [10304615, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [10304615, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [10304615, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1549840544, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1549840544, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1549840544, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1549840544, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1549840544, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1549840544, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [793808700, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [793808700, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [793808700, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [793808700, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [793808700, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [793808700, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2016146960, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2016146960, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2016146960, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2016146960, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2016146960, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2016146960, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [568462037, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [568462037, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [568462037, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [568462037, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [568462037, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [568462037, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:36:00] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 12:36:00] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 12:36:00] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 12:36:00] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 12:36:00] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 12:36:00] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:36:00] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:36:00] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 12:36:00] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:36:00] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:36:00] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:36:00] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 12:36:00] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 12:36:00] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 12:36:00] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 12:36:00] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:36:00] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@711d1a52] 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:36:00] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:36:00] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1040172900, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1040172900, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1040172900, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1040172900, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1040172900, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1040172900, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1758962399, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1758962399, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1758962399, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1758962399, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1758962399, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:36:00] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1758962399, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:36:00] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:41:51] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:41:51 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:41:51] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:41:51] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:41:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:41:52] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:41:52] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@7646731d] 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:41:52] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:41:52] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:52] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:41:52] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:41:52] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:41:52] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@2abc224d] 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:41:52] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:41:52] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#26fb628' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:41:52] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@71178a52] 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:41:52] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:41:52] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:41:52] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:41:52] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:41:52] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:52] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:41:52] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:41:52] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:52] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:41:52] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:41:52] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:41:52] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:52] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:41:52] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:41:52] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:52] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:41:52] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:41:52] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:41:52] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:41:51 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1582330795, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:41:52] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1582330795, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1582330795, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1582330795, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:52] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1582330795, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:52] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1582330795, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:41:52] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:41:53] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:41:51 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1443335402, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:41:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1443335402, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1443335402, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1443335402, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1443335402, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1443335402, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:41:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [280862192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:41:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [280862192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [280862192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [280862192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [280862192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [280862192, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:41:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [971256592, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:41:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [971256592, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [971256592, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [971256592, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [971256592, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [971256592, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:41:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1316205906, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:41:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1316205906, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1316205906, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1316205906, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1316205906, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1316205906, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:41:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [567391009, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:41:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [567391009, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [567391009, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [567391009, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [567391009, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [567391009, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:41:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:41:53] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 12:41:53] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 12:41:53] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 12:41:53] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 12:41:53] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 12:41:53] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:41:53] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:41:53] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 12:41:53] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:41:53] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:41:53] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:41:53] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 12:41:53] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 12:41:53] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 12:41:53] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 12:41:53] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:41:53] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@76563d26] 
main> [2018-01-08 12:41:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 12:41:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 12:41:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 12:41:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 12:41:53] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:41:53] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:41:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:41:53] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:41:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:41:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:41:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [626961003, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:41:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1043584830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:41:53] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1043584830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1043584830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1043584830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:53] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1043584830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:41:53] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1043584830, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:41:53] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:42:50] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1198b989: startup date [Mon Jan 08 12:42:50 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:42:50] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:42:50] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:42:50] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:42:50] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:42:50] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@2555fff0] 
main> [2018-01-08 12:42:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:42:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:42:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:42:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:42:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:42:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:42:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:42:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:42:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:42:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:42:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:42:50] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:42:50] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:42:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:42:50] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:42:50] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:42:50] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:42:50] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1166361824, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:42:51] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:42:51] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@1c025cb] 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:42:51] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:42:51] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#4215838f' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:42:51] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@512d4583] 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:42:51] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:42:51] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:42:51] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [405950359, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [609879567, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:42:51] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1015659282, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1526866775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:42:51] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:42:51] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@1198b989: startup date [Mon Jan 08 12:42:50 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [992955027, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [992955027, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [992955027, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [992955027, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [992955027, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [992955027, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:42:51] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@1198b989: startup date [Mon Jan 08 12:42:50 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [212416033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [212416033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [212416033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [212416033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [212416033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [212416033, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [542895457, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [542895457, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [542895457, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [542895457, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [542895457, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [542895457, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [149818403, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [149818403, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [149818403, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [149818403, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [149818403, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [149818403, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1329492804, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1329492804, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1329492804, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1329492804, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1329492804, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1329492804, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [750795985, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [750795985, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [750795985, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [750795985, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [750795985, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [750795985, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:42:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 12:42:51] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 12:42:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 12:42:51] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 12:42:51] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 12:42:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:42:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:42:51] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 12:42:51] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:42:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:42:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:42:51] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 12:42:51] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 12:42:51] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 12:42:51] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 12:42:51] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:42:51] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@65a48602] 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:42:51] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:42:51] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1441014857, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1441014857, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1441014857, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1441014857, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1441014857, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1441014857, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1415624532, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1415624532, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1415624532, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1415624532, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1415624532, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:42:51] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1415624532, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:42:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:43:47] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:43:47 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:43:47] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:43:48] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:43:48] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:43:48] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:43:48] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@7646731d] 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:43:48] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:43:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:43:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:43:48] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:43:48] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@2abc224d] 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:43:48] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:43:48] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#26fb628' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:43:48] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@71178a52] 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:43:48] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:43:48] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:43:48] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:43:48] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:43:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:43:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:43:48] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:48] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:48] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:43:48] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:43:48] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:43:49] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:43:49] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:43:47 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:43:49] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:43:47 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:43:49] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 12:43:49] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 12:43:49] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 12:43:49] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 12:43:49] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 12:43:49] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:43:49] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:43:49] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 12:43:49] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:43:49] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:43:49] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:43:49] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 12:43:49] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 12:43:49] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 12:43:49] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 12:43:49] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:43:49] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@302edb74] 
main> [2018-01-08 12:43:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 12:43:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 12:43:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 12:43:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 12:43:49] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:43:49] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:43:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:43:49] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:43:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:43:49] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1699511597, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1699511597, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1699511597, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1699511597, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1699511597, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1699511597, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1450830187, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1450830187, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1450830187, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1450830187, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1450830187, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:43:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1450830187, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:43:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:44:21] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:44:21 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:44:21] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:44:22] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:44:24] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:44:24] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:44:24] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@5a4bef8] 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:44:24] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:44:24] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:44:24] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:44:24] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:44:24] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:44:24] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:44:24] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:24] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:24] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:44:24] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:44:24] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:44:24] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@35f8a9d3] 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:44:24] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:44:24] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:44:25] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#4a9f80d3' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:44:25] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@5e840abf] 
main> [2018-01-08 12:44:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:44:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:44:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:44:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:44:25] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:44:25] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:44:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:44:25] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:44:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:44:25] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:44:25] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:44:25] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:25] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:44:25] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:44:25] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:25] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:44:25] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:44:25] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:44:25] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:25] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:44:25] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:44:25] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:25] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:25] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:44:25] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:44:25] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:44:26] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:44:21 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:44:26] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:44:26] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:44:26] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:44:26] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:44:26] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:44:26] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:26] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:26] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:44:26] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:44:27] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:44:21 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:44:27] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:27] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:44:27] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:44:27] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:27] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:44:27] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:44:27] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:27] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:44:27] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:44:27] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:27] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:44:27] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:44:27] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:27] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:27] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:44:27] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:44:27] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 12:44:27] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 12:44:27] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 12:44:27] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 12:44:27] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 12:44:27] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:44:27] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:44:28] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 12:44:28] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:44:28] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:44:28] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:44:28] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 12:44:28] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 12:44:28] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 12:44:28] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 12:44:28] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:44:28] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@658255aa] 
main> [2018-01-08 12:44:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 12:44:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 12:44:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 12:44:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 12:44:28] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:44:28] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:44:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:44:28] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:44:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:44:28] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:44:28] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:44:28] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1622912252, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:44:28] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1622912252, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:44:28] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1622912252, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:44:28] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:44:28] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1622912252, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:28] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1622912252, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:28] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1622912252, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:44:28] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:44:28] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:44:28] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1859956068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:44:28] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1859956068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:44:28] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1859956068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:44:28] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:44:28] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1859956068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:28] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1859956068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:44:28] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1859956068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:44:28] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:46:07] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:46:07 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:46:07] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:46:08] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:46:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:46:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:46:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@5a4bef8] 
main> [2018-01-08 12:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:46:10] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:46:10] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:46:10] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:46:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:46:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:46:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:46:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:46:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:46:11] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:46:11] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@35f8a9d3] 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:46:11] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:46:11] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#4a9f80d3' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:46:11] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@5e840abf] 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:46:11] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:46:11] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:46:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:46:11] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:46:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:46:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:46:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:46:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:46:11] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:46:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:46:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:46:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:46:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:46:11] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:46:13] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:46:07 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:46:13] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:13] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:46:13] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:46:13] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:46:07 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:46:13] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:13] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:46:13] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:46:13] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:13] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:46:13] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:46:13] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:13] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:46:13] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:46:13] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:13] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:46:13] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:46:13] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:13] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:13] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:46:13] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:46:13] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 12:46:13] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 12:46:13] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 12:46:13] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 12:46:13] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 12:46:13] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:46:13] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:46:14] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 12:46:14] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:46:14] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:46:14] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:46:14] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 12:46:14] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 12:46:14] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 12:46:14] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 12:46:14] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:46:14] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@46185a1b] 
main> [2018-01-08 12:46:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 12:46:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 12:46:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 12:46:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 12:46:14] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:46:14] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:46:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:46:14] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:46:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:46:14] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:46:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:46:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1618489605, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:46:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1618489605, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:46:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1618489605, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:46:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:46:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1618489605, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1618489605, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1618489605, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:46:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:46:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:46:14] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1583722422, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:46:14] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1583722422, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:46:14] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1583722422, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:46:14] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:46:14] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1583722422, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:14] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1583722422, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:46:14] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1583722422, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:46:14] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:52:58] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:52:58 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:52:58] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:52:59] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:53:01] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:53:01] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:53:01] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@5a4bef8] 
main> [2018-01-08 12:53:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:53:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:53:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:53:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:53:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:53:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:53:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:53:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:53:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:53:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:53:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:53:01] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:53:01] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:53:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:53:01] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:53:01] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:53:01] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:53:01] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:53:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [339788561, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:53:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:53:02] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:53:02] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@35f8a9d3] 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:53:02] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:53:02] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#4a9f80d3' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:53:02] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@5e840abf] 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:53:02] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:53:02] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:53:02] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:53:02] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:53:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1532756055, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:53:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:53:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1003307628, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:53:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:53:02] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:53:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1399398408, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:53:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:53:02] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:02] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:02] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [128077491, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:53:02] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:53:02] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:53:03] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:52:58 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:53:03] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:53:03] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:53:03] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:53:03] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:53:03] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:53:03] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:03] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:03] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [750797656, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:53:03] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:53:04] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:52:58 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:53:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [17808347, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:53:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:53:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:53:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:53:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [75480150, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:53:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:53:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1979455890, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:53:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:53:04] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:04] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1920098017, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:53:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:53:04] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 12:53:04] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 12:53:04] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 12:53:04] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 12:53:04] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 12:53:04] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:53:04] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:53:05] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 12:53:05] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:53:05] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:53:05] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:53:05] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 12:53:05] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 12:53:05] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 12:53:05] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 12:53:05] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:53:05] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@658255aa] 
main> [2018-01-08 12:53:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 12:53:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 12:53:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 12:53:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 12:53:05] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:53:05] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:53:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:53:05] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:53:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:53:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:53:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:53:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1622912252, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:53:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1622912252, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:53:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1622912252, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:53:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:53:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1622912252, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1622912252, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1622912252, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:53:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:53:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:53:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1859956068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:53:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1859956068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:53:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1859956068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:53:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:53:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1859956068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1859956068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1859956068, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:53:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:53:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.src.ServicePhone.insertPhone]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-08 12:53:12] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1650299186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:53:12] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1650299186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:53:12] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-08 12:53:12] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4da6d664] 
main> [2018-01-08 12:53:12] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1650299186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-08 12:53:12] [insertPhone] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_Phone ( name , manufacturer , price ) VALUES ( ?, ?, ? )  
main> [2018-01-08 12:53:12] [insertPhone] [139] [DEBUG] ==> Parameters: ㅁㄴㅇ(String), ㅇㅁㄴㅇ(String), 123(Integer) 
main> [2018-01-08 12:53:12] [insertPhone] [139] [DEBUG] <==    Updates: 1 
main> [2018-01-08 12:53:12] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4da6d664] 
main> [2018-01-08 12:53:12] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4da6d664] 
main> [2018-01-08 12:53:12] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4da6d664] 
main> [2018-01-08 12:53:12] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4da6d664] 
main> [2018-01-08 12:53:12] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:53:12] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1650299186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:53:12] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1650299186, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:53:12] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:54:53] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:54:53 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:54:53] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:54:53] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:54:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:54:53] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:54:53] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@7646731d] 
main> [2018-01-08 12:54:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:54:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:54:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:54:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:54:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:54:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:54:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:54:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:54:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:54:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:54:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:54:53] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:54:53] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:54:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:54:53] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:54:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:54:53] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:54:53] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:54:54] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:54:54] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@2abc224d] 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:54:54] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:54:54] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#26fb628' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:54:54] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@71178a52] 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:54:54] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:54:54] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:54:54] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:54:54] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:54:54] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:54:54] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:54:53 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:54:54] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:54:53 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:54:54] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 12:54:54] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 12:54:54] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 12:54:54] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 12:54:54] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 12:54:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:54:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:54:54] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 12:54:54] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:54:54] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:54:54] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:54:54] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 12:54:54] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 12:54:54] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 12:54:54] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 12:54:54] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:54:54] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@302edb74] 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:54:54] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:54:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [73878928, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [73878928, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [73878928, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [73878928, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [73878928, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:54:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [73878928, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:54:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:56:31] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:56:31 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:56:31] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:56:31] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:56:31] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:56:31] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:56:31] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@7646731d] 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:56:32] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:56:32] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:56:32] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@512d4583] 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:56:32] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:56:32] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#26fb628' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:56:32] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@64f555e7] 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:56:32] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:56:32] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:56:32] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:56:32] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:56:32] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:56:32] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:56:31 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2079051109, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2079051109, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2079051109, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2079051109, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2079051109, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2079051109, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:56:32] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:56:31 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1820355723, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1820355723, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1820355723, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1820355723, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1820355723, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1820355723, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2049646260, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1053832786, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1053832786, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1053832786, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1053832786, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1053832786, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1053832786, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1035363280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1035363280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1035363280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1035363280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1035363280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1035363280, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1063423209, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1063423209, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1063423209, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1063423209, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1063423209, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:32] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1063423209, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:56:32] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:56:32] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 12:56:32] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 12:56:32] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 12:56:32] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 12:56:32] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 12:56:32] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:56:32] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:56:32] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 12:56:32] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:56:32] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:56:32] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:56:32] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 12:56:32] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 12:56:32] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 12:56:32] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 12:56:32] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:56:32] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@612e21b9] 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:56:32] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:56:32] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:56:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:56:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:56:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:56:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:56:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:56:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:56:33] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:56:33] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1845137754, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:56:33] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1845137754, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:56:33] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1845137754, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:56:33] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:56:33] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1845137754, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:33] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1845137754, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:33] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1845137754, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:56:33] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:56:33] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:56:33] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [203924386, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:56:33] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [203924386, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:56:33] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [203924386, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:56:33] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:56:33] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [203924386, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:33] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [203924386, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:56:33] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [203924386, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:56:33] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:57:04] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:57:04 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:57:04] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 12:57:05] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:57:05] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 12:57:05] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:57:05] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@7646731d] 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:57:05] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1217089772, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:57:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1217089772, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1217089772, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1217089772, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1217089772, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1217089772, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:57:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:57:05] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:57:05] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@102d92c4] 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:57:05] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:57:05] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#26fb628' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:57:05] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@abbc908] 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 12:57:05] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:57:05] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:05] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:57:05] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [700348233, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:57:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [700348233, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [700348233, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [700348233, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [700348233, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [700348233, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:57:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [905488851, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:57:05] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [905488851, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [905488851, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [905488851, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:05] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [905488851, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:05] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [905488851, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:57:05] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:57:05] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1206946689, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1206946689, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1206946689, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1206946689, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1206946689, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1206946689, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [253027775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [253027775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [253027775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [253027775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [253027775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [253027775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:57:06] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 12:57:06] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:57:04 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [269244031, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [269244031, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [269244031, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [269244031, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [269244031, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [269244031, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:57:06] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 12:57:04 KST 2018]; root of context hierarchy 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [922547904, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [922547904, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [922547904, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [922547904, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [922547904, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [922547904, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1440995011, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1440995011, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1440995011, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1440995011, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1440995011, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1440995011, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [956856274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [956856274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [956856274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [956856274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [956856274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [956856274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [589610983, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [589610983, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [589610983, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [589610983, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [589610983, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [589610983, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:57:06] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 12:57:06] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 12:57:06] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 12:57:06] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 12:57:06] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 12:57:06] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:57:06] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:57:06] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 12:57:06] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 12:57:06] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:57:06] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 12:57:06] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 12:57:06] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 12:57:06] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 12:57:06] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 12:57:06] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 12:57:06] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@35c12c7a] 
main> [2018-01-08 12:57:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 12:57:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 12:57:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 12:57:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 12:57:06] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 12:57:06] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 12:57:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 12:57:06] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 12:57:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 12:57:06] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 12:57:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 12:57:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:01:09] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 13:01:09 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:01:09] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 13:01:10] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:01:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:01:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:01:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@7646731d] 
main> [2018-01-08 13:01:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 13:01:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 13:01:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 13:01:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 13:01:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 13:01:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 13:01:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 13:01:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 13:01:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 13:01:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 13:01:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 13:01:10] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:01:10] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:01:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:01:10] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:01:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:01:10] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:01:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1502882632, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:01:11] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:01:11] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@2abc224d] 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:01:11] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:01:11] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#26fb628' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:01:11] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@71178a52] 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 13:01:11] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:01:11] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:01:11] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [646445398, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [691096777, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:01:11] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1704535540, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1827371870, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:01:11] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 13:01:11] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 13:01:09 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1195670735, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:01:11] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 13:01:09 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1845297077, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1881949035, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1257090913, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1945915791, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [904409454, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:01:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 13:01:11] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 13:01:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 13:01:11] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 13:01:11] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 13:01:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:01:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:01:11] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 13:01:11] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:01:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 13:01:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 13:01:11] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 13:01:11] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 13:01:11] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 13:01:11] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 13:01:11] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:01:11] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@302edb74] 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:01:11] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:01:11] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1479177802, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [73878928, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [73878928, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [73878928, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [73878928, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [73878928, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [73878928, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.src.ServicePhone.getPhoneOne]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1857126088, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:01:11] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1857126088, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:01:11] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1857126088, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:01:11] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-08 13:01:11] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1229a2b7] 
main> [2018-01-08 13:01:11] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1857126088, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-08 13:01:11] [getPhoneOne] [139] [DEBUG] ==>  Preparing: SELECT name, manufacturer, price FROM TB_Phone WHERE name = ?  
main> [2018-01-08 13:01:12] [getPhoneOne] [139] [DEBUG] ==> Parameters: 이영규(String) 
main> [2018-01-08 13:01:12] [getPhoneOne] [139] [DEBUG] <==      Total: 1 
main> [2018-01-08 13:01:12] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1229a2b7] 
main> [2018-01-08 13:01:12] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1229a2b7] 
main> [2018-01-08 13:01:12] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1229a2b7] 
main> [2018-01-08 13:01:12] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@1229a2b7] 
main> [2018-01-08 13:01:12] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:01:12] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1857126088, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:12] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1857126088, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:01:12] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1857126088, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:01:12] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:03:53] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 13:03:53 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:03:53] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 13:03:54] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:03:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:03:54] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:03:54] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@7646731d] 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:03:54] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1217089772, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:03:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1217089772, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1217089772, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1217089772, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1217089772, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1217089772, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:03:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:03:54] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:03:54] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@102d92c4] 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:03:54] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:03:54] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#26fb628' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:03:54] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@abbc908] 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 13:03:54] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:03:54] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:03:54] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:03:54] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [700348233, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:03:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [700348233, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [700348233, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [700348233, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [700348233, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [700348233, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:03:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [905488851, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:03:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [905488851, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [905488851, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [905488851, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [905488851, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [905488851, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:03:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:03:54] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1206946689, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:03:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1206946689, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1206946689, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1206946689, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1206946689, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1206946689, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:03:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [253027775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:03:54] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [253027775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [253027775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [253027775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:54] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [253027775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:54] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [253027775, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:03:54] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:03:54] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 13:03:55] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 13:03:53 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [269244031, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [269244031, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [269244031, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [269244031, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [269244031, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [269244031, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:03:55] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 13:03:53 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [922547904, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [922547904, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [922547904, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [922547904, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [922547904, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [922547904, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1440995011, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1440995011, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1440995011, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1440995011, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1440995011, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1440995011, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [956856274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [956856274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [956856274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [956856274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [956856274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [956856274, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [753692748, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [589610983, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [589610983, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [589610983, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [589610983, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [589610983, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [589610983, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:03:55] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 13:03:55] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 13:03:55] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 13:03:55] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 13:03:55] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 13:03:55] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:03:55] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:03:55] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 13:03:55] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:03:55] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 13:03:55] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 13:03:55] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 13:03:55] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 13:03:55] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 13:03:55] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 13:03:55] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:03:55] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@25290bca] 
main> [2018-01-08 13:03:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 13:03:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 13:03:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 13:03:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 13:03:55] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:03:55] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:03:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:03:55] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:03:55] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:03:55] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1706655559, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1706655559, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1706655559, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1706655559, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1706655559, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1706655559, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1281361915, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1281361915, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1281361915, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1281361915, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1281361915, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1281361915, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.src.ServicePhone.getPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [2004305265, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [2004305265, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [2004305265, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:03:55] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-08 13:03:55] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@524a076e] 
main> [2018-01-08 13:03:55] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [2004305265, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-08 13:03:55] [getPhoneList] [139] [DEBUG] ==>  Preparing: SELECT name, manufacturer, price FROM TB_Phone WHERE 1 =1  
main> [2018-01-08 13:03:55] [getPhoneList] [139] [DEBUG] ==> Parameters:  
main> [2018-01-08 13:03:55] [getPhoneList] [139] [DEBUG] <==      Total: 2 
main> [2018-01-08 13:03:55] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@524a076e] 
main> [2018-01-08 13:03:55] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@524a076e] 
main> [2018-01-08 13:03:55] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@524a076e] 
main> [2018-01-08 13:03:55] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@524a076e] 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [2004305265, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [2004305265, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [2004305265, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.src.ServicePhone.getPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [387377349, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [387377349, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [387377349, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:03:55] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-08 13:03:55] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@518bfd90] 
main> [2018-01-08 13:03:55] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [387377349, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-08 13:03:55] [getPhoneList] [139] [DEBUG] ==>  Preparing: SELECT name, manufacturer, price FROM TB_Phone WHERE 1 =1  
main> [2018-01-08 13:03:55] [getPhoneList] [139] [DEBUG] ==> Parameters:  
main> [2018-01-08 13:03:55] [getPhoneList] [139] [DEBUG] <==      Total: 2 
main> [2018-01-08 13:03:55] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@518bfd90] 
main> [2018-01-08 13:03:55] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@518bfd90] 
main> [2018-01-08 13:03:55] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@518bfd90] 
main> [2018-01-08 13:03:55] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@518bfd90] 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [387377349, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [387377349, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:03:55] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [387377349, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:03:55] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:13:32] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 13:13:32 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:13:32] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 13:13:33] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:13:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:13:33] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:13:33] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@7646731d] 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:13:33] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:13:33] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:33] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:13:33] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:13:33] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:13:33] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@512d4583] 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:13:33] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:13:33] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#26fb628' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:13:33] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@64f555e7] 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 13:13:33] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:13:33] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:13:33] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:13:33] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:13:33] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:33] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:13:33] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:13:33] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:33] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:33] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:13:33] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:13:33] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:13:34] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 13:13:34] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 13:13:32 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [730955696, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [730955696, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [730955696, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [730955696, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [730955696, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [730955696, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:13:34] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 13:13:32 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1842881670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1842881670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1842881670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1842881670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1842881670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1842881670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [16556935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [16556935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [16556935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [16556935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [16556935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [16556935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1867177582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1867177582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1867177582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1867177582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1867177582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1867177582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:13:34] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 13:13:34] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 13:13:34] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 13:13:34] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 13:13:34] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 13:13:34] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:13:34] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:13:34] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 13:13:34] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:13:34] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 13:13:34] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 13:13:34] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 13:13:34] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 13:13:34] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 13:13:34] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 13:13:34] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:13:34] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@35c12c7a] 
main> [2018-01-08 13:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 13:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 13:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 13:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 13:13:34] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:13:34] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:13:34] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:13:34] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:13:34] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:13:34] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:13:34] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:14:40] [ClassPathXmlApplicationContext] [514] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 13:14:40 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:14:40] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from URL [file:src/main/webapp/WEB-INF/spring/appServlet/servlet-context.xml] 
main> [2018-01-08 13:14:40] [AutowiredAnnotationBeanPostProcessor] [153] [INFO] JSR-330 'javax.inject.Inject' annotation found and supported for autowiring 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [write*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [add*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [create*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [regist*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [set*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [modify*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [edit*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [change*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [remove] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [terminate*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [trans*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [read*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:14:41] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [get*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2018-01-08 13:14:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:14:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.FormattingConversionServiceFactoryBean@7646731d] 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public org.springframework.format.support.FormattingConversionService org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject() throws java.lang.Exception 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.format.support.FormattingConversionServiceFactoryBean.isSingleton() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Class org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.afterPropertiesSet() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setConverters(java.util.Set) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatters(java.util.Set) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setFormatterRegistrars(java.util.Set) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setRegisterDefaultFormatters(boolean) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected void org.springframework.format.support.FormattingConversionServiceFactoryBean.installFormatters(org.springframework.format.FormatterRegistry) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionServiceFactoryBean.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:14:41] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObject]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:14:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1202907617, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:14:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:14:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'org.springframework.format.support.FormattingConversionServiceFactoryBean#0' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:14:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.format.support.DefaultFormattingConversionService@512d4583] 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatter(org.springframework.format.Formatter) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldAnnotation(org.springframework.format.AnnotationFormatterFactory) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.setEmbeddedValueResolver(org.springframework.util.StringValueResolver) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Formatter) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.format.support.FormattingConversionService.addFormatterForFieldType(java.lang.Class,org.springframework.format.Printer,org.springframework.format.Parser) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String org.springframework.core.convert.support.GenericConversionService.toString() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(java.lang.Class,java.lang.Class) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.Object org.springframework.core.convert.support.GenericConversionService.convert(java.lang.Object,java.lang.Class) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(org.springframework.core.convert.converter.GenericConverter) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverter(java.lang.Class,java.lang.Class,org.springframework.core.convert.converter.Converter) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.core.convert.support.GenericConversionService.canBypassConvert(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.addConverterFactory(org.springframework.core.convert.converter.ConverterFactory) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.core.convert.support.GenericConversionService.removeConvertible(java.lang.Class,java.lang.Class) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected java.lang.Object org.springframework.core.convert.support.GenericConversionService.convertNullSource(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected org.springframework.core.convert.converter.GenericConverter org.springframework.core.convert.support.GenericConversionService.getDefaultConverter(org.springframework.core.convert.TypeDescriptor,org.springframework.core.convert.TypeDescriptor) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:14:41] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:14:41] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean '(inner bean)#26fb628' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:14:41] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor@64f555e7] 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public boolean org.springframework.web.servlet.handler.ConversionServiceExposingInterceptor.preHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws javax.servlet.ServletException,java.io.IOException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterConcurrentHandlingStarted(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object) throws java.lang.Exception 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.afterCompletion(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,java.lang.Exception) throws java.lang.Exception 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public void org.springframework.web.servlet.handler.HandlerInterceptorAdapter.postHandle(javax.servlet.http.HttpServletRequest,javax.servlet.http.HttpServletResponse,java.lang.Object,org.springframework.web.servlet.ModelAndView) throws java.lang.Exception 
main> [2018-01-08 13:14:41] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:14:41] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:14:41] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:14:41] [SimpleUrlHandlerMapping] [314] [INFO] Mapped URL path [/resources/**] onto handler 'org.springframework.web.servlet.resource.ResourceHttpRequestHandler#0' 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:14:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1914740115, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:14:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:14:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [564893839, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:14:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:14:41] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:14:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1553077867, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:14:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:14:41] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:41] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:41] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1455064947, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:14:41] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:14:41] [RequestMappingHandlerMapping] [218] [INFO] Mapped "{[/],methods=[GET]}" onto public java.lang.String com.spring65.phone.Controller.HomeController.home(java.util.Locale,org.springframework.ui.Model) 
main> [2018-01-08 13:14:42] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 13:14:40 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [730955696, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [730955696, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [730955696, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [730955696, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [730955696, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [730955696, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:14:42] [RequestMappingHandlerAdapter] [517] [INFO] Looking for @ControllerAdvice: org.springframework.context.support.ClassPathXmlApplicationContext@6b4a4e18: startup date [Mon Jan 08 13:14:40 KST 2018]; root of context hierarchy 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1842881670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1842881670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1842881670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1842881670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1842881670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1842881670, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [16556935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [16556935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [16556935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [16556935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [16556935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [16556935, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1867177582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1867177582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1867177582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1867177582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1867177582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1867177582, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1795560878, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1847301137, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:14:42] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2018-01-08 13:14:42] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2018-01-08 13:14:42] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2018-01-08 13:14:42] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2018-01-08 13:14:42] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2018-01-08 13:14:42] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:14:42] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:14:42] [ResolverUtil] [94] [DEBUG] Reader entry: ModelPhone.class 
main> [2018-01-08 13:14:42] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model 
main> [2018-01-08 13:14:42] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 13:14:42] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/Spring/Work/spring65.phone/bin/com/spring65/phone/model/ModelPhone.class 
main> [2018-01-08 13:14:42] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 ;  #com/spring65/phone/model/ModelPhone  java/lang/Object name Ljava/lang/String; manufacturer price Ljava/lang/Integer; getName ()Ljava/lang/String; Code	     LineNumberTable LocalVariableTable this %Lcom/spring65/phone/model/ModelPhone; setName (Ljava/lang/String;)V getManufacturer	     setManufacturer getPrice ()Ljava/lang/Integer;	    	 setPrice (Ljava/lang/Integer;)V toString ! java/lang/StringBuilder # ModelPhone [name= 
main> [2018-01-08 13:14:42] [ResolverUtil] [250] [DEBUG] Checking to see if class com.spring65.phone.model.ModelPhone matches criteria [is assignable to Object] 
main> [2018-01-08 13:14:42] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2018-01-08 13:14:42] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2018-01-08 13:14:42] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicephone' with 0 common interceptors and 2 specific interceptors 
main> [2018-01-08 13:14:42] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [com.spring65.phone.src.ServicePhone@35c12c7a] 
main> [2018-01-08 13:14:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public com.spring65.phone.model.ModelPhone com.spring65.phone.src.ServicePhone.getPhoneOne(java.lang.String) 
main> [2018-01-08 13:14:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List com.spring65.phone.src.ServicePhone.getPhoneList() 
main> [2018-01-08 13:14:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhone(com.spring65.phone.model.ModelPhone) 
main> [2018-01-08 13:14:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int com.spring65.phone.src.ServicePhone.insertPhoneList(java.util.List) 
main> [2018-01-08 13:14:42] [CglibAopProxy] [783] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2018-01-08 13:14:42] [CglibAopProxy] [795] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2018-01-08 13:14:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2018-01-08 13:14:42] [CglibAopProxy] [800] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2018-01-08 13:14:42] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2018-01-08 13:14:42] [CglibAopProxy] [789] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [675889995, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [org.springframework.format.support.FormattingConversionServiceFactoryBean.getObjectType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] read-only 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [135003590, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [com.spring65.phone.src.ServicePhone.insertPhoneList]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [511357840, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] for JDBC transaction 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [511357840, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] to manual commit 
main> [2018-01-08 13:14:42] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2018-01-08 13:14:42] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4da6d664] 
main> [2018-01-08 13:14:42] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [511357840, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] will be managed by Spring 
main> [2018-01-08 13:14:42] [insertPhoneList] [139] [DEBUG] ==>  Preparing: INSERT INTO TB_Phone( name , manufacturer , price ) VALUES ( ? , ? , ? ),( ? , ? , ? ),( ? , ? , ? ),( ? , ? , ? ),( ? , ? , ? ),( ? , ? , ? ),( ? , ? , ? ),( ? , ? , ? ),( ? , ? , ? ),( ? , ? , ? )  
main> [2018-01-08 13:14:42] [insertPhoneList] [139] [DEBUG] ==> Parameters: ddd(String), sss(String), 12003(Integer), ddd(String), sss(String), 12003(Integer), ddd(String), sss(String), 12003(Integer), ddd(String), sss(String), 12003(Integer), ddd(String), sss(String), 12003(Integer), ddd(String), sss(String), 12003(Integer), ddd(String), sss(String), 12003(Integer), ddd(String), sss(String), 12003(Integer), ddd(String), sss(String), 12003(Integer), ddd(String), sss(String), 12003(Integer) 
main> [2018-01-08 13:14:42] [insertPhoneList] [139] [DEBUG] <==    Updates: 10 
main> [2018-01-08 13:14:42] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4da6d664] 
main> [2018-01-08 13:14:42] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4da6d664] 
main> [2018-01-08 13:14:42] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4da6d664] 
main> [2018-01-08 13:14:42] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4da6d664] 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [511357840, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] 
main> [2018-01-08 13:14:42] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [511357840, URL=jdbc:mysql://localhost:3306/springboard?useUnicode=true&characterEncoding=utf8, UserName=tester1@localhost, MySQL Connector Java] after transaction 
main> [2018-01-08 13:14:42] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
