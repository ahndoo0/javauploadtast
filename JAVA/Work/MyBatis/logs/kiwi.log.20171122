main> [2017-11-22 14:38:27] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 14:38:27 KST 2017]; root of context hierarchy 
main> [2017-11-22 14:38:27] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 14:38:28] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 14:38:29] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 14:38:29] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 14:38:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 14:38:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 14:38:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 14:38:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 14:38:29] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 14:38:29] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@355e34c7] 
main> [2017-11-22 14:38:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 14:38:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 14:38:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 14:38:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 14:38:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 14:38:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 14:38:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 14:38:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 14:38:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 14:38:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 14:38:29] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 14:38:29] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 14:38:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 14:38:29] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 14:38:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 14:38:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:04:26] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:04:26 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:04:26] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:04:27] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:04:28] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:04:28] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:04:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:04:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:04:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:04:28] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:04:28] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:04:28] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@355e34c7] 
main> [2017-11-22 15:04:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:04:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:04:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:04:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:04:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:04:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:04:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:04:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:04:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:04:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:04:28] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:04:28] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:04:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:04:28] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:04:28] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:04:28] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:04:45] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:04:45] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fa05212] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:04:45] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5fa05212] 
main> [2017-11-22 15:19:24] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:19:24 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:19:24] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:19:25] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:19:25] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:19:25] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:19:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:19:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:19:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:19:25] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:19:25] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:19:25] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@355e34c7] 
main> [2017-11-22 15:19:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:19:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:19:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:19:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:19:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:19:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:19:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:19:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:19:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:19:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:19:25] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:19:25] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:19:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:19:25] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:19:25] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:19:25] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:19:25] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:19:25] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:19:25] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] 
main> [2017-11-22 15:20:04] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:20:04 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:20:04] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:20:04] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:20:04] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:20:04] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:20:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:20:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:20:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:20:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:20:04] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:20:04] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@6063d80a] 
main> [2017-11-22 15:20:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:20:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:20:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:20:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:20:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:20:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:20:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:20:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:20:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:20:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:20:04] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:20:04] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:20:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:20:04] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:20:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:20:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:20:04] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:20:04] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:20:04] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] 
main> [2017-11-22 15:21:54] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:21:54 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:21:54] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:21:54] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:21:54] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:21:54] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:21:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:21:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:21:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:21:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:21:54] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:21:54] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@6063d80a] 
main> [2017-11-22 15:21:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:21:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:21:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:21:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:21:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:21:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:21:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:21:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:21:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:21:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:21:54] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:21:54] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:21:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:21:54] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:21:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:21:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:22:20] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:22:20] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:22:20] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] 
main> [2017-11-22 15:26:03] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 15:26:03 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:26:03] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:26:03] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:26:03] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:26:03] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:26:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:26:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:26:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:26:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:26:04] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:26:04] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@476aac9] 
main> [2017-11-22 15:26:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:26:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:26:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:26:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:26:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:26:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:26:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:26:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:26:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:26:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:26:04] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:26:04] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:26:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:26:04] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:26:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:26:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:26:04] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:26:04] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a9c84a5] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:26:04] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a9c84a5] 
main> [2017-11-22 15:27:11] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:27:11 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:27:11] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:27:12] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:27:12] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:27:12] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:27:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:27:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:27:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:27:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:27:12] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:27:12] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@355e34c7] 
main> [2017-11-22 15:27:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:27:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:27:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:27:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:27:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:27:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:27:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:27:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:27:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:27:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:27:12] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:27:12] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:27:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:27:12] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:27:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:27:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:27:12] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:27:12] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:27:12] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] 
main> [2017-11-22 15:27:37] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:27:37 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:27:37] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:27:38] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:27:38] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:27:38] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:27:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:27:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:27:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:27:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:27:38] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:27:38] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@355e34c7] 
main> [2017-11-22 15:27:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:27:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:27:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:27:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:27:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:27:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:27:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:27:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:27:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:27:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:27:38] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:27:38] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:27:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:27:38] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:27:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:27:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:27:38] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:27:38] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:27:38] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] 
main> [2017-11-22 15:34:21] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:34:21 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:34:21] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:34:21] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:34:22] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:34:22] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:34:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:34:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:34:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:34:22] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:34:22] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:34:22] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@355e34c7] 
main> [2017-11-22 15:34:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:34:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:34:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:34:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:34:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:34:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:34:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:34:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:34:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:34:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:34:22] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:34:22] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:34:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:34:22] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:34:22] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:34:22] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:34:22] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:34:22] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:34:22] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] 
main> [2017-11-22 15:37:38] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:37:38 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:37:38] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:37:38] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:37:38] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:37:38] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:37:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:37:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:37:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:37:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:37:39] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:37:39] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@355e34c7] 
main> [2017-11-22 15:37:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:37:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:37:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:37:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:37:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:37:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:37:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:37:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:37:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:37:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:37:39] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:37:39] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:37:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:37:39] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:37:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:37:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:37:39] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:37:39] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:37:39] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] 
main> [2017-11-22 15:38:59] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:38:59 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:38:59] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:39:00] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:39:00] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:39:00] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:39:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:39:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:39:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:39:00] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:39:00] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:39:00] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@6063d80a] 
main> [2017-11-22 15:39:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:39:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:39:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:39:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:00] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:39:00] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:39:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:39:00] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:39:00] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:39:00] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:39:04] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:39:04] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:39:04] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] 
main> [2017-11-22 15:39:11] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:39:11 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:39:11] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:39:11] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:39:12] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:39:12] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:39:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:39:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:39:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:39:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:39:12] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:39:12] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@6063d80a] 
main> [2017-11-22 15:39:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:39:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:39:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:39:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:12] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:39:12] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:39:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:39:12] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:39:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:39:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:39:12] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:39:12] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:39:12] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] 
main> [2017-11-22 15:39:52] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:39:52 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:39:52] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:39:53] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:39:53] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:39:53] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:39:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:39:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:39:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:39:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:39:53] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:39:53] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@6063d80a] 
main> [2017-11-22 15:39:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:39:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:39:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:39:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:39:53] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:39:53] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:39:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:39:53] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:39:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:39:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:39:53] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:39:53] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:39:53] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] 
main> [2017-11-22 15:40:56] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:40:56 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:40:56] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:40:56] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:40:57] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:40:57] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:40:57] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:40:57] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:40:57] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:40:57] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:40:57] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:40:57] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@6063d80a] 
main> [2017-11-22 15:40:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:40:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:40:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:40:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:40:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:40:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:40:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:40:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:40:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:40:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:40:57] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:40:57] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:40:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:40:57] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:40:57] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:40:57] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:40:57] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:40:57] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:40:57] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] 
main> [2017-11-22 15:41:32] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:41:32 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:41:32] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:41:32] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:41:33] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:41:33] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:41:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:41:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:41:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:41:33] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:41:33] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:41:33] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@355e34c7] 
main> [2017-11-22 15:41:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:41:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:41:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:41:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:41:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:41:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:41:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:41:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:41:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:41:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:41:33] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:41:33] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:41:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:41:33] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:41:33] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:41:33] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:41:33] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:41:33] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:41:33] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] 
main> [2017-11-22 15:42:52] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 15:42:52 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:42:52] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:42:52] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:42:53] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:42:53] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:42:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:42:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:42:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:42:53] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:42:53] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:42:53] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@476aac9] 
main> [2017-11-22 15:42:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:42:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:42:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:42:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:42:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:42:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:42:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:42:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:42:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:42:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:42:53] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:42:53] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:42:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:42:53] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:42:53] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:42:53] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:43:37] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:43:38] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a9c84a5] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:43:38] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a9c84a5] 
main> [2017-11-22 15:45:28] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:45:28 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:45:28] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:45:28] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:45:28] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:45:28] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:45:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:45:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:45:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:45:29] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:45:29] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:45:29] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@6063d80a] 
main> [2017-11-22 15:45:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:45:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:45:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:45:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:45:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:45:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:45:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:45:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:45:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:45:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:45:29] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:45:29] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:45:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:45:29] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:45:29] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:45:29] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:45:38] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:45:38 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:45:38] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:45:38] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:45:39] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:45:39] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:45:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:45:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:45:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:45:39] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:45:39] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:45:39] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@355e34c7] 
main> [2017-11-22 15:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:45:39] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:45:39] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:45:39] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:45:39] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:45:39] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:45:39] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:45:39] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:45:39] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] 
main> [2017-11-22 15:47:58] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:47:58 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:47:58] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:47:58] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:47:58] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:47:58] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:47:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:47:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:47:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:47:58] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:47:58] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:47:58] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@355e34c7] 
main> [2017-11-22 15:47:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:47:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:47:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:47:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:47:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:47:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:47:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:47:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:47:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:47:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:47:58] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:47:58] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:47:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:47:58] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:47:58] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:47:58] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:47:58] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:47:58] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:47:58] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] 
main> [2017-11-22 15:48:06] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 15:48:06 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:48:06] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:48:06] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:48:06] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:48:06] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:48:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:48:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:48:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:48:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:48:06] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:48:06] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@54107f42] 
main> [2017-11-22 15:48:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:48:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:48:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:48:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:48:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:48:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:48:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:48:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:48:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:48:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:48:07] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:48:07] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:48:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:48:07] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:48:07] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:48:07] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:48:07] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:48:07] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a9c84a5] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:48:07] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@7a9c84a5] 
main> [2017-11-22 15:51:53] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:51:53 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:51:53] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:51:53] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:51:54] [SqlSessionFactoryBean] [362] [DEBUG] Property 'configLocation' not specified, using default MyBatis Configuration 
main> [2017-11-22 15:51:54] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:51:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:51:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:51:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:51:54] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:51:54] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:51:54] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@355e34c7] 
main> [2017-11-22 15:51:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:51:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:51:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:51:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:51:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:51:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:51:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:51:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:51:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:51:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:51:54] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:51:54] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:51:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:51:54] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:51:54] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:51:54] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:51:54] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:51:54] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:51:54] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@742d4e15] 
main> [2017-11-22 15:53:51] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29f69090: startup date [Wed Nov 22 15:53:51 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:53:51] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:53:51] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:53:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 15:53:51] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 15:53:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 15:53:51] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 15:53:51] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 15:53:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:53:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:53:51] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 15:53:51] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 15:53:51] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:53:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 15:53:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 15:53:51] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 &  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth <init> :(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)V 
main> [2017-11-22 15:53:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:53:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:53:51] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 E  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Z authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 15:53:51] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 15:53:51] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 15:53:52] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 15:53:52] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:53:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:53:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:53:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:53:52] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:53:52] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:53:52] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@3e681bc] 
main> [2017-11-22 15:53:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:53:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:53:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:53:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:53:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:53:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:53:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:53:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:53:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:53:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:53:52] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:53:52] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:53:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:53:52] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:53:52] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:53:52] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:53:52] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:53:52] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e45f87] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:53:52] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 15:53:52] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [844872102, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 15:53:52] [getCount] [139] [DEBUG] ==>  Preparing: select count(*) from book where 1=1  
main> [2017-11-22 15:53:52] [getCount] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 15:53:52] [getCount] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 15:53:52] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@61e45f87] 
main> [2017-11-22 15:53:52] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 15:54:11] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 15:54:11 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:54:11] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:54:12] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:54:12] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 15:54:12] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 15:54:12] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 15:54:12] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 15:54:12] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 15:54:12] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:54:12] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:54:12] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 15:54:12] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 15:54:12] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:54:12] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 15:54:12] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 15:54:12] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 &  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth <init> :(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)V 
main> [2017-11-22 15:54:12] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:54:12] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:54:12] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 E  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Z authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 15:54:12] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 15:54:12] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 15:54:12] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 15:54:12] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:54:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:54:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:54:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:54:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:54:12] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:54:12] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 15:54:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:54:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:54:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:54:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:54:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:54:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:54:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:54:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:54:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:54:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:54:12] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:54:12] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:54:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:54:12] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:54:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:54:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:54:12] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:54:12] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bb3131b] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:54:12] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 15:54:12] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1374432753, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 15:54:12] [getCount] [139] [DEBUG] ==>  Preparing: select count(*) from book where 1=1  
main> [2017-11-22 15:54:12] [getCount] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 15:54:12] [getCount] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 15:54:12] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bb3131b] 
main> [2017-11-22 15:54:12] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 15:55:06] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 15:55:06 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:55:06] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:55:06] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:55:06] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 15:55:06] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 15:55:06] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 15:55:06] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 15:55:06] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 15:55:06] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:55:06] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:55:06] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 15:55:06] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 15:55:06] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:55:06] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 15:55:06] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 15:55:06] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 &  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth <init> :(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)V 
main> [2017-11-22 15:55:06] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:55:06] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:55:06] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 E  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Z authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 15:55:06] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 15:55:06] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 15:55:06] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 15:55:06] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:55:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:55:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:55:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:55:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:55:06] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:55:06] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 15:55:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:55:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:55:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:55:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:55:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:55:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:55:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:55:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:55:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:55:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:55:06] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:55:06] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:55:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:55:06] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:55:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:55:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:55:07] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:55:07] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bb3131b] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:55:07] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 15:55:07] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1374432753, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 15:55:07] [getCount] [139] [DEBUG] ==>  Preparing: select count(*) from book where 1=1  
main> [2017-11-22 15:55:07] [getCount] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 15:55:07] [getCount] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 15:55:07] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bb3131b] 
main> [2017-11-22 15:55:07] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 15:58:37] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 15:58:37 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:58:37] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:58:37] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:58:37] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 15:58:37] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 15:58:37] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 15:58:37] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 15:58:37] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 15:58:37] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:58:37] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:58:37] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 15:58:37] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 15:58:37] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:58:37] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 15:58:37] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 15:58:37] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 &  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth <init> :(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)V 
main> [2017-11-22 15:58:37] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:58:37] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:58:37] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 E  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Z authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 15:58:37] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 15:58:37] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 15:58:38] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 15:58:38] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:58:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:58:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:58:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:58:38] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:58:38] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:58:38] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 15:58:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:58:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:58:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:58:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:38] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:58:38] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:58:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:58:38] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:58:38] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:58:38] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:58:38] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:58:38] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bb3131b] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:58:38] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 15:58:38] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1374432753, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 15:58:38] [getCount] [139] [DEBUG] ==>  Preparing: select count(*) from book where 1=1  
main> [2017-11-22 15:58:38] [getCount] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 15:58:38] [getCount] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 15:58:38] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bb3131b] 
main> [2017-11-22 15:58:38] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 15:58:50] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 15:58:50 KST 2017]; root of context hierarchy 
main> [2017-11-22 15:58:50] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 15:58:50] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 15:58:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 15:58:51] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 15:58:51] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 15:58:51] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 15:58:51] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 15:58:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:58:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:58:51] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 15:58:51] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 15:58:51] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 15:58:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 15:58:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 15:58:51] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 &  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth <init> :(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)V 
main> [2017-11-22 15:58:51] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:58:51] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 15:58:51] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 E  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Z authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 15:58:51] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 15:58:51] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 15:58:51] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 15:58:51] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 15:58:51] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:58:51] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:58:51] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 15:58:51] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 15:58:51] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 15:58:51] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 15:58:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 15:58:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 15:58:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 15:58:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 15:58:51] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 15:58:51] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 15:58:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 15:58:51] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 15:58:51] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 15:58:51] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 15:58:51] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 15:58:51] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bb3131b] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 15:58:51] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 15:58:51] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1374432753, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 15:58:51] [getCount] [139] [DEBUG] ==>  Preparing: select count(*) from book where 1=1  
main> [2017-11-22 15:58:51] [getCount] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 15:58:51] [getCount] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 15:58:51] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@5bb3131b] 
main> [2017-11-22 15:58:51] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:00:11] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 16:00:11 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:00:11] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:00:11] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:00:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:00:11] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:00:11] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:00:11] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:00:11] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:00:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:00:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:00:11] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:00:11] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:00:11] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:00:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:00:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:00:11] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 &  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth <init> :(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)V 
main> [2017-11-22 16:00:11] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:00:11] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:00:11] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 E  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Z authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:00:11] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:00:11] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:00:11] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:00:11] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:00:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:00:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:00:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:00:12] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:00:12] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:00:12] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 16:00:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:00:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:00:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:00:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:00:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:00:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:00:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 16:00:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 16:00:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:00:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:00:12] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:00:12] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:00:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:00:12] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:00:12] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:00:12] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:00:12] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:00:12] [SqlSessionUtils] [140] [DEBUG] SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b0ca5e1] was not registered for synchronization because synchronization is not active 
main> [2017-11-22 16:00:12] [DataSourceUtils] [110] [DEBUG] Fetching JDBC Connection from DataSource 
main> [2017-11-22 16:00:12] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [987489551, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will not be managed by Spring 
main> [2017-11-22 16:00:12] [getMaxBookid] [139] [DEBUG] ==>  Preparing: select max(bookid) from book  
main> [2017-11-22 16:00:12] [getMaxBookid] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:00:12] [getMaxBookid] [139] [DEBUG] <==      Total: 1 
main> [2017-11-22 16:00:12] [SqlSessionUtils] [168] [DEBUG] Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@3b0ca5e1] 
main> [2017-11-22 16:00:12] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:02:34] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 16:02:34 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:02:34] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:02:34] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:02:34] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:02:34] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:02:34] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:02:34] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:02:34] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:02:34] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:02:34] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:02:34] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:02:34] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:02:34] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:02:34] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:02:34] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:02:34] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 &  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth <init> :(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)V 
main> [2017-11-22 16:02:34] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:02:34] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:02:34] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 E  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Z authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:02:34] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:02:34] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:02:35] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:02:35] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:02:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:02:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:02:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:02:35] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:02:35] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:02:35] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 16:02:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:02:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:02:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:02:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:02:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:02:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:02:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 16:02:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 16:02:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:02:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:02:35] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:02:35] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:02:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:02:35] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:02:35] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:02:35] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:02:35] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:02:35] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:02:35] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:02:35] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:02:35] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:02:35] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:02:35] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:02:35] [selectAll] [139] [DEBUG] ==>  Preparing: select * from book where 1=1  
main> [2017-11-22 16:02:35] [selectAll] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:02:35] [selectAll] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:02:35] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:02:35] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:02:35] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:02:35] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:02:35] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:02:35] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:02:35] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:02:35] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:02:35] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:02:48] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 16:02:48 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:02:48] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:02:48] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:02:48] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:02:48] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:02:48] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:02:48] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:02:48] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:02:48] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:02:48] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:02:48] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:02:48] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:02:48] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:02:48] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:02:48] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:02:48] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 &  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth <init> :(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)V 
main> [2017-11-22 16:02:48] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:02:48] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:02:48] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 E  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Z authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:02:48] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:02:48] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:02:48] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:02:48] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:02:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:02:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:02:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:02:49] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:02:49] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:02:49] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 16:02:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:02:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:02:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:02:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:02:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:02:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:02:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 16:02:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 16:02:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:02:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:02:49] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:02:49] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:02:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:02:49] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:02:49] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:02:49] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:02:49] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:02:49] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:02:49] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:02:49] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:02:49] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:02:49] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:02:49] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:02:49] [selectAll] [139] [DEBUG] ==>  Preparing: select * from book where 1=1  
main> [2017-11-22 16:02:49] [selectAll] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:02:49] [selectAll] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:02:49] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:02:49] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:02:49] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:02:49] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:02:49] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:02:49] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:02:49] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:02:49] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:02:49] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:03:05] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 16:03:05 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:03:05] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:03:05] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:03:05] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:03:05] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:03:05] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:03:05] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:03:05] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:03:05] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:03:05] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:03:06] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:03:06] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:03:06] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:03:06] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:03:06] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:03:06] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 &  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth <init> :(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)V 
main> [2017-11-22 16:03:06] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:03:06] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:03:06] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 E  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Z authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:03:06] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:03:06] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:03:06] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:03:06] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:03:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:03:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:03:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:03:06] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:03:06] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:03:06] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 16:03:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:03:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:03:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:03:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:03:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:03:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:03:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 16:03:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 16:03:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:03:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:03:06] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:03:06] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:03:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:03:06] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:03:06] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:03:06] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:03:06] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectAll]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:03:06] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:03:06] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:03:06] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:03:06] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:03:06] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:03:06] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:03:06] [selectAll] [139] [DEBUG] ==>  Preparing: select * from book where 1=1  
main> [2017-11-22 16:03:06] [selectAll] [139] [DEBUG] ==> Parameters:  
main> [2017-11-22 16:03:06] [selectAll] [139] [DEBUG] <==      Total: 4 
main> [2017-11-22 16:03:06] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:03:06] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:03:06] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:03:06] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:03:06] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:03:06] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:03:06] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:03:06] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:03:06] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 16:34:29] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 16:34:29 KST 2017]; root of context hierarchy 
main> [2017-11-22 16:34:29] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 16:34:30] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 16:34:30] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 16:34:30] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 16:34:30] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 16:34:30] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 16:34:30] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 16:34:30] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:34:30] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:34:30] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 16:34:30] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 16:34:30] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 16:34:30] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:34:30] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 16:34:30] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 &  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth <init> :(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)V 
main> [2017-11-22 16:34:30] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:34:30] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 16:34:30] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 E  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm Ljava/util/Date; use_yn Z authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  $ 	  setPublisher getYear	  (  
main> [2017-11-22 16:34:30] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 16:34:30] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 16:34:30] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 16:34:30] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 16:34:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:34:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:34:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 16:34:30] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 16:34:30] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 16:34:30] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@53bf7094] 
main> [2017-11-22 16:34:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:34:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 16:34:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:34:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:34:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:34:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:34:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 16:34:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 16:34:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:34:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 16:34:30] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 16:34:30] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 16:34:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 16:34:30] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 16:34:30] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 16:34:30] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 16:34:30] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.selectEqual]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly 
main> [2017-11-22 16:34:30] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 16:34:30] [DataSourceUtils] [153] [DEBUG] Setting JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] read-only 
main> [2017-11-22 16:34:30] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 16:34:30] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 16:34:30] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:34:31] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 16:34:31] [selectEqual] [139] [DEBUG] ==>  Preparing: select * from book where 1=1 and publisher = ?  
main> [2017-11-22 16:34:31] [selectEqual] [139] [DEBUG] ==> Parameters: wiley(String) 
main> [2017-11-22 16:34:31] [selectEqual] [139] [DEBUG] <==      Total: 2 
main> [2017-11-22 16:34:31] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:34:31] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:34:31] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:34:31] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@26dcd8c0] 
main> [2017-11-22 16:34:31] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 16:34:31] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:34:31] [DataSourceUtils] [222] [DEBUG] Resetting read-only flag of JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 16:34:31] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1270383967, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 16:34:31] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:03:14] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 18:03:14 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:03:14] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:03:14] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:03:14] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:03:14] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:03:14] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:03:14] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:03:14] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:03:14] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:03:14] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:03:14] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 18:03:14] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:03:14] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:03:14] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:03:14] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:03:14] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 &  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth <init> :(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)V 
main> [2017-11-22 18:03:14] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:03:14] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:03:14] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 C  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm use_yn Z authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  # 	  setPublisher getYear	  '  
main> [2017-11-22 18:03:14] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 18:03:14] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:03:14] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:03:14] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:03:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:03:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:03:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:03:14] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:03:14] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:03:14] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7cf7aee] 
main> [2017-11-22 18:03:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:03:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:03:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:03:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:03:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:03:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:03:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 18:03:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 18:03:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:03:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:03:14] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:03:14] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:03:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:03:14] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:03:14] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:03:14] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:03:14] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insertBook]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:03:15] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1153802607, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:03:15] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1153802607, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:03:15] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:03:15] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e889df] 
main> [2017-11-22 18:03:15] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1153802607, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 18:03:15] [insertBook] [139] [DEBUG] ==>  Preparing: insert into book ( bookname, publisher, year, price, dtm, use_yn, authid ) values ( ?, ?, ?, ?, ?, ?, ? )  
main> [2017-11-22 18:03:15] [insertBook] [139] [DEBUG] ==> Parameters: 11(String), 11(String), 11(String), 11(String), 11(String), false(Boolean), 1(Integer) 
main> [2017-11-22 18:03:15] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e889df] 
main> [2017-11-22 18:03:15] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [org/springframework/jdbc/support/sql-error-codes.xml] 
main> [2017-11-22 18:03:15] [SQLErrorCodesFactory] [126] [INFO] SQLErrorCodes loaded: [DB2, Derby, H2, HSQL, Informix, MS-SQL, MySQL, Oracle, PostgreSQL, Sybase, Hana] 
main> [2017-11-22 18:03:15] [SQLErrorCodesFactory] [199] [DEBUG] Looking up default SQLErrorCodes for DataSource [org.apache.commons.dbcp2.BasicDataSource@7dd00705] 
main> [2017-11-22 18:03:15] [SQLErrorCodesFactory] [217] [DEBUG] Database product name cached for DataSource [org.apache.commons.dbcp2.BasicDataSource@7dd00705]: name is 'MySQL' 
main> [2017-11-22 18:03:15] [SQLErrorCodesFactory] [175] [DEBUG] SQL error codes for 'MySQL' found 
main> [2017-11-22 18:03:15] [SQLErrorCodeSQLExceptionTranslator] [281] [DEBUG] Unable to translate SQLException with Error code '1292', will now try the fallback translator 
main> [2017-11-22 18:03:15] [SQLStateSQLExceptionTranslator] [96] [DEBUG] Extracted SQL state class '22' from value '22001' 
main> [2017-11-22 18:03:15] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e889df] 
main> [2017-11-22 18:03:15] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e889df] 
main> [2017-11-22 18:03:15] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e889df] 
main> [2017-11-22 18:03:15] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:03:15] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1153802607, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:03:15] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1153802607, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:03:15] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:05:03] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 18:05:03 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:05:03] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:05:03] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:05:03] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:05:03] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:05:03] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:05:03] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:05:03] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:05:03] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:05:03] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:05:03] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 18:05:03] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:05:03] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:05:03] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:05:03] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:05:03] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 &  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth <init> :(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)V 
main> [2017-11-22 18:05:03] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:05:03] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:05:03] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 C  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm use_yn Z authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  # 	  setPublisher getYear	  '  
main> [2017-11-22 18:05:03] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 18:05:03] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:05:03] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:05:03] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:05:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:05:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:05:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:05:04] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:05:04] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:05:04] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7cf7aee] 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:05:04] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:05:04] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:05:04] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:05:04] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insertBook]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:05:04] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1153802607, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:05:04] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1153802607, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:05:04] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:05:04] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e889df] 
main> [2017-11-22 18:05:04] [SpringManagedTransaction] [86] [DEBUG] JDBC Connection [1153802607, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] will be managed by Spring 
main> [2017-11-22 18:05:04] [insertBook] [139] [DEBUG] ==>  Preparing: insert into book ( bookname, publisher, year, price, dtm, use_yn, authid ) values ( ?, ?, ?, ?, ?, ?, ? )  
main> [2017-11-22 18:05:04] [insertBook] [139] [DEBUG] ==> Parameters: 11(String), 11(String), 11(String), 11(String), 2017-11-22(String), false(Boolean), 1(Integer) 
main> [2017-11-22 18:05:04] [insertBook] [139] [DEBUG] <==    Updates: 1 
main> [2017-11-22 18:05:04] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e889df] 
main> [2017-11-22 18:05:04] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e889df] 
main> [2017-11-22 18:05:04] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e889df] 
main> [2017-11-22 18:05:04] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e889df] 
main> [2017-11-22 18:05:04] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:05:04] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1153802607, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:05:04] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1153802607, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:05:04] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
main> [2017-11-22 18:11:31] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 18:11:31 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:11:31] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:11:32] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:11:32] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:11:32] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:11:32] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:11:32] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:11:32] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:11:32] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:11:32] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:11:32] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 18:11:32] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:11:32] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:11:32] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:11:32] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:11:32] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 &  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth <init> :(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)V 
main> [2017-11-22 18:11:32] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:11:32] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:11:32] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 C  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm use_yn Z authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  # 	  setPublisher getYear	  '  
main> [2017-11-22 18:11:32] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 18:11:32] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:11:32] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:11:32] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:11:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:11:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:11:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:11:32] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:11:32] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:11:32] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7cf7aee] 
main> [2017-11-22 18:11:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:11:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.lang.String,int) throws java.lang.Exception 
main> [2017-11-22 18:11:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.util.Date,int) 
main> [2017-11-22 18:11:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:11:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:11:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:11:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:11:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:11:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 18:11:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:11:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:11:32] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:11:32] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:11:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:11:32] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:11:32] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:11:32] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:12:09] [ClassPathXmlApplicationContext] [510] [INFO] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@2145433b: startup date [Wed Nov 22 18:12:09 KST 2017]; root of context hierarchy 
main> [2017-11-22 18:12:09] [XmlBeanDefinitionReader] [317] [INFO] Loading XML bean definitions from class path resource [ApplicationContext.xml] 
main> [2017-11-22 18:12:09] [LogFactory] [128] [DEBUG] Logging initialized using 'class org.apache.ibatis.logging.slf4j.Slf4jImpl' adapter. 
main> [2017-11-22 18:12:10] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VFS 
main> [2017-11-22 18:12:10] [ResolverUtil] [137] [DEBUG] JBoss 6 VFS API is not available in this environment. 
main> [2017-11-22 18:12:10] [ResolverUtil] [101] [DEBUG] Class not found: org.jboss.vfs.VirtualFile 
main> [2017-11-22 18:12:10] [ResolverUtil] [68] [DEBUG] VFS implementation org.apache.ibatis.io.JBoss6VFS is not valid in this environment. 
main> [2017-11-22 18:12:10] [ResolverUtil] [80] [DEBUG] Using VFS adapter org.apache.ibatis.io.DefaultVFS 
main> [2017-11-22 18:12:10] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:12:10] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:12:10] [ResolverUtil] [94] [DEBUG] Reader entry: ModelAuth.class 
main> [2017-11-22 18:12:10] [ResolverUtil] [94] [DEBUG] Reader entry: ModelBook.class 
main> [2017-11-22 18:12:10] [ResolverUtil] [103] [DEBUG] Listing file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model 
main> [2017-11-22 18:12:10] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:12:10] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelAuth.class 
main> [2017-11-22 18:12:10] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 &  java24/mybatis/model/ModelAuth  java/lang/Object authid Ljava/lang/Integer; name Ljava/lang/String; birth 	getAuthid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelAuth; 	setAuthid (Ljava/lang/Integer;)V getName ()Ljava/lang/String;	     setName (Ljava/lang/String;)V getBirth	   	  setBirth <init> :(Ljava/lang/Integer;Ljava/lang/String;Ljava/lang/String;)V 
main> [2017-11-22 18:12:10] [ResolverUtil] [197] [DEBUG] Find JAR URL: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:12:10] [ResolverUtil] [217] [DEBUG] Not a JAR: file:/D:/workspace/JAVA/Work/MyBatis/bin/java24/mybatis/model/ModelBook.class 
main> [2017-11-22 18:12:10] [ResolverUtil] [94] [DEBUG] Reader entry: ����   4 C  java24/mybatis/model/ModelBook  java/lang/Object bookid Ljava/lang/Integer; bookname Ljava/lang/String; 	publisher year price dtm use_yn Z authid 	getBookid ()Ljava/lang/Integer; Code	     LineNumberTable LocalVariableTable this  Ljava24/mybatis/model/ModelBook; 	setBookid (Ljava/lang/Integer;)V getBookname ()Ljava/lang/String;	     setBookname (Ljava/lang/String;)V getPublisher	  # 	  setPublisher getYear	  '  
main> [2017-11-22 18:12:10] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelAuth matches criteria [is assignable to Object] 
main> [2017-11-22 18:12:10] [ResolverUtil] [250] [DEBUG] Checking to see if class java24.mybatis.model.ModelBook matches criteria [is assignable to Object] 
main> [2017-11-22 18:12:10] [SqlSessionFactoryBean] [431] [DEBUG] Parsed configuration file: 'class path resource [Configuration.xml]' 
main> [2017-11-22 18:12:10] [SqlSessionFactoryBean] [477] [DEBUG] Property 'mapperLocations' was not specified or no matching resources found 
main> [2017-11-22 18:12:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [insert*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:12:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [update*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:12:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [delete*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException] 
main> [2017-11-22 18:12:10] [NameMatchTransactionAttributeSource] [96] [DEBUG] Adding transactional method [select*] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT,readOnly] 
main> [2017-11-22 18:12:10] [AspectJAwareAdvisorAutoProxyCreator] [505] [DEBUG] Creating implicit proxy for bean 'servicebook' with 0 common interceptors and 2 specific interceptors 
main> [2017-11-22 18:12:10] [CglibAopProxy] [158] [DEBUG] Creating CGLIB proxy: target source is SingletonTargetSource for target object [java24.mybatis.svr.ServiceBook@7cf7aee] 
main> [2017-11-22 18:12:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getCount(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:12:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.getMaxBookid() throws java.lang.Exception 
main> [2017-11-22 18:12:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectAll(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:12:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectEqual(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:12:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:12:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.insertMap(java.lang.String,java.lang.String,int) 
main> [2017-11-22 18:12:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectLike(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:12:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.updateBook(java24.mybatis.model.ModelBook,java24.mybatis.model.ModelBook) 
main> [2017-11-22 18:12:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public int java24.mybatis.svr.ServiceBook.deleteBook(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:12:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.util.List java24.mybatis.svr.ServiceBook.selectDynamic(java24.mybatis.model.ModelBook) throws java.lang.Exception 
main> [2017-11-22 18:12:10] [CglibAopProxy] [782] [DEBUG] Found finalize() method - using NO_OVERRIDE 
main> [2017-11-22 18:12:10] [CglibAopProxy] [794] [DEBUG] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object) 
main> [2017-11-22 18:12:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString() 
main> [2017-11-22 18:12:10] [CglibAopProxy] [799] [DEBUG] Found 'hashCode' method: public native int java.lang.Object.hashCode() 
main> [2017-11-22 18:12:10] [CglibAopProxy] [831] [DEBUG] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor) 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen() 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass() 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource) 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource() 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean) 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean) 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy() 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered() 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors() 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor) 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice) 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces() 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class) 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString() 
main> [2017-11-22 18:12:10] [CglibAopProxy] [788] [DEBUG] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass() 
main> [2017-11-22 18:12:10] [DataSourceTransactionManager] [367] [DEBUG] Creating new transaction with name [java24.mybatis.svr.ServiceBook.insertMap]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT,-RuntimeException 
main> [2017-11-22 18:12:10] [DataSourceTransactionManager] [206] [DEBUG] Acquired Connection [1153802607, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] for JDBC transaction 
main> [2017-11-22 18:12:10] [DataSourceTransactionManager] [223] [DEBUG] Switching JDBC Connection [1153802607, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] to manual commit 
main> [2017-11-22 18:12:10] [SqlSessionUtils] [104] [DEBUG] Creating a new SqlSession 
main> [2017-11-22 18:12:10] [SqlSessionUtils] [120] [DEBUG] Registering transaction synchronization for SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e889df] 
main> [2017-11-22 18:12:10] [SqlSessionUtils] [163] [DEBUG] Releasing transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e889df] 
main> [2017-11-22 18:12:10] [SqlSessionUtils] [261] [DEBUG] Transaction synchronization committing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e889df] 
main> [2017-11-22 18:12:10] [SqlSessionUtils] [287] [DEBUG] Transaction synchronization deregistering SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e889df] 
main> [2017-11-22 18:12:10] [SqlSessionUtils] [292] [DEBUG] Transaction synchronization closing SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@66e889df] 
main> [2017-11-22 18:12:10] [DataSourceTransactionManager] [755] [DEBUG] Initiating transaction commit 
main> [2017-11-22 18:12:10] [DataSourceTransactionManager] [269] [DEBUG] Committing JDBC transaction on Connection [1153802607, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] 
main> [2017-11-22 18:12:10] [DataSourceTransactionManager] [327] [DEBUG] Releasing JDBC Connection [1153802607, URL=jdbc:mysql://localhost:3306/book_db?useUnicode=true&characterEncoding=utf8, UserName=root@localhost, MySQL Connector Java] after transaction 
main> [2017-11-22 18:12:10] [DataSourceUtils] [327] [DEBUG] Returning JDBC Connection to DataSource 
